# ==============================================================================
# MissQuiz Telegram Bot - Environment Configuration Template
# ==============================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env file to version control
# ==============================================================================

# ------------------------------------------------------------------------------
# Telegram Bot Configuration (REQUIRED)
# ------------------------------------------------------------------------------
# Get your bot token from @BotFather on Telegram
TELEGRAM_TOKEN=your_bot_token_here

# ------------------------------------------------------------------------------
# Database Configuration (REQUIRED)
# ------------------------------------------------------------------------------
# PostgreSQL connection string for Docker deployment
# Format: postgresql://username:password@hostname:port/database
# Use the service name 'postgres' as hostname in docker-compose
DATABASE_URL=postgresql://missquiz:missquiz_password@postgres:5432/missquiz_db

# ------------------------------------------------------------------------------
# Redis Configuration (Optional - for future caching/sessions)
# ------------------------------------------------------------------------------
# Redis connection string for Docker deployment
# Format: redis://:password@hostname:port/database
# Use the service name 'redis' as hostname in docker-compose
# Password must match the one in docker-compose.yml (--requirepass)
REDIS_URL=redis://:missquiz_redis_pass@redis:6379/0

# ------------------------------------------------------------------------------
# Flask Session Secret (REQUIRED)
# ------------------------------------------------------------------------------
# Generate a random secret key for session security
# You can generate one with: python -c "import secrets; print(secrets.token_hex(32))"
SESSION_SECRET=your_random_secret_key_here

# ------------------------------------------------------------------------------
# Bot Owners (Optional - for administrative access)
# ------------------------------------------------------------------------------
# Your Telegram user ID (get it from @userinfobot)
# Leave empty if you don't want admin features
OWNER_ID=

# Additional authorized user ID (optional)
WIFU_ID=

# ------------------------------------------------------------------------------
# Deployment Mode
# ------------------------------------------------------------------------------
# Mode: 'polling' or 'webhook'
# - polling: Bot actively checks for updates (recommended for most deployments)
# - webhook: Telegram pushes updates to your server (requires public HTTPS URL)
MODE=polling

# ------------------------------------------------------------------------------
# Webhook Configuration (Only required if MODE=webhook)
# ------------------------------------------------------------------------------
# Your public HTTPS URL where Telegram will send updates
# Leave empty if using polling mode
WEBHOOK_URL=

# Render.com specific URL (auto-detected on Render platform)
# Leave empty if not deploying on Render
RENDER_URL=

# ------------------------------------------------------------------------------
# Server Configuration
# ------------------------------------------------------------------------------
# Port for the Flask web server (health checks and webhook endpoint)
PORT=5000

# ------------------------------------------------------------------------------
# Logging Configuration
# ------------------------------------------------------------------------------
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# ==============================================================================
# Additional Notes:
# ==============================================================================
# 1. For local development with SQLite instead of PostgreSQL:
#    - Comment out DATABASE_URL or leave it empty
#    - The bot will use SQLite at data/quiz_bot.db
#
# 2. Security Best Practices:
#    - Never commit .env file to git
#    - Use strong, random values for SESSION_SECRET
#    - Rotate credentials regularly
#    - Keep TELEGRAM_TOKEN secure
#
# 3. Docker Deployment:
#    - Ensure .env file is in the same directory as docker-compose.yml
#    - Run: docker-compose up -d
#    - Check logs: docker-compose logs -f bot
# ==============================================================================
